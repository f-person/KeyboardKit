{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In KeyboardKit, a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAppearance"},{"type":"text","text":" defines the styles, texts, icons etc. for different parts of the keyboard. It can adapt styles depending on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAction"},{"type":"text","text":" etc., which gives you a lot of flexibility."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit will by default create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardAppearance"},{"type":"text","text":" and apply it to the input controller "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardAppearance"},{"type":"text","text":". You can replace it with a custom appearance to customize how your keyboard looks."}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro"},{"type":"text","text":" specific features, such as the very convenient theme engine, are described at the end of this document."}]},{"anchor":"Appearance-vs-styles-vs-themes","level":2,"type":"heading","text":"Appearance vs. styles vs. themes"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You may find yourself confused by the appearance terminology. Letâ€™s clarify what appearances, styles and themes are, and how they are meant to be used."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAppearance"},{"type":"text","text":" is a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"dynamic"}]},{"type":"text","text":" style provider that returns various styles (and more) for various parts of the keyboard. It can return different styles for different actions, if dark mode is enabled etc. so you have full control over every part of your keyboard."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"KeyboardTheme"},{"type":"text","text":" is a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"static"}]},{"type":"text","text":" style provider that can be used to define, reuse and share styles. It can be used with a "},{"type":"codeVoice","code":"KeyboardThemeAppearance"},{"type":"text","text":" to add a dynamic capabilities on top of the static theme. These utilities are only available in KeyboardKit Pro."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Style"},{"type":"text","text":" provides properties that can be used to style various parts of the keyboard. One such example is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardButtonStyle"},{"type":"text","text":". Styles can be customized and used as templates to create other styles."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can mix and match appearances, themes and styles as you see fit."}]},{"anchor":"Resources--Assets","level":2,"type":"heading","text":"Resources & Assets"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit comes with colors and images that make it easy to create native-looking keyboards."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Image"},{"type":"text","text":" has a bunch of static, keyboard-specific images, e.g. "},{"type":"codeVoice","code":".keyboardBackspace"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Color"},{"type":"text","text":" has a bunch of static, keyboard-specific colors, e.g. "},{"type":"codeVoice","code":".standardButtonBackgroundColor(for:)"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAction"},{"type":"text","text":" and other types have standard images, texts and colors, for instance:"}]}]}]},{"type":"codeListing","syntax":"swift","code":["let context = KeyboardContext()","let image = KeyboardAction.command.standardButtonImage(for: context) \/\/ Command icon","let text = KeyboardAction.space.standardButtonText(for: context)     \/\/ Localized \"space\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Have a look at the "},{"type":"codeVoice","code":"Sources\/Resources"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sources\/Appearance"},{"type":"text","text":" folders for more information."}]},{"anchor":"Styles","level":2,"type":"heading","text":"Styles"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Appearance"},{"type":"text","text":" namespace defines a bunch of general styles, such as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardButtonStyle"},{"type":"text","text":", while other namespaces define more contextual styles, such as how the "},{"type":"codeVoice","code":"Emojis"},{"type":"text","text":" namespace defines an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/EmojiKeyboardStyle"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Any style can be modified, as long as itâ€™s a "},{"type":"codeVoice","code":"var"},{"type":"text","text":". For instance, here we adjust the standard "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/CalloutStyle"},{"type":"text","text":" to use a red background:"}]},{"type":"codeListing","syntax":"swift","code":["var style = CalloutStyle.standard","style.backgroundColor = .red","CalloutStyle.standard = style"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Most styles have a "},{"type":"codeVoice","code":".standard"},{"type":"text","text":" style that you can use as a template. The standard styles can also be overwritten with a custom style to change the global style of that component."}]},{"anchor":"How-to-create-a-custom-appearance","level":2,"type":"heading","text":"How to create a custom appearance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can create a custom "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAppearance"},{"type":"text","text":" to customize the style of various buttons or callouts, as well as texts, images etc. You can either inherit "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardAppearance"},{"type":"text","text":" to get a lot of functionality for free and customize the parts you want, or implement the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAppearance"},{"type":"text","text":" protocol from scratch."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, hereâ€™s a custom appearance that inherits "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardAppearance"},{"type":"text","text":" and makes all input buttons red:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardAppearance: StandardKeyboardAppearance {","    ","    override func buttonStyle(","        for action: KeyboardAction,","        isPressed: Bool","    ) -> KeyboardButtonStyle {","        let style = super.buttonStyle(for: action, isPressed: isPressed)","        if !action.isInputActionÂ { return style }","        style.backgroundColor = .red","        return style","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use this appearance instead of the standard one, just set the input controllerâ€™s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardAppearance"},{"type":"text","text":" to the new appearance:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardViewController: KeyboardInputViewController {","","    override func viewDidLoad() {","        keyboardAppearance = MyKeyboardAppearance()","        super.viewDidLoad()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will make KeyboardKit use your custom appearance instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardAppearance"},{"type":"text","text":"."}]},{"anchor":"ðŸ‘‘-Pro-features","level":2,"type":"heading","text":"ðŸ‘‘ Pro features"},{"anchor":"Themes","level":3,"type":"heading","text":"Themes"},{"type":"paragraph","inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"KeyboardKit Pro"}],"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro","overridingTitle":"KeyboardKit Pro"},{"type":"text","text":" unlocks a theme engine that makes it a LOT easier to define styles for a keyboard. It comes with several predefined themes and lets you define your own themes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"KeyboardTheme"},{"type":"text","text":" can be used to define a bunch of styles, such as button and background styles. KeyboardKit comes with many pre-defined themes, like "},{"type":"codeVoice","code":".standard"},{"type":"text","text":", "},{"type":"codeVoice","code":".minimal"},{"type":"text","text":", "},{"type":"codeVoice","code":".swifty"},{"type":"text","text":" and more playful ones like "},{"type":"codeVoice","code":".candy"},{"type":"text","text":" and "},{"type":"codeVoice","code":".neon"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["KeyboardTheme.standard","KeyboardTheme.swifty","KeyboardTheme.minimal","KeyboardTheme.candy","KeyboardTheme.neon","KeyboardTheme.tron"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All pre-defined themes also come with style variations that allow you to tweak the overall style of a theme:"}]},{"type":"codeListing","syntax":"swift","code":["KeyboardTheme.standard(.pink)","KeyboardTheme.swifty(.blue)","KeyboardTheme.minimal(.midnight)","KeyboardTheme.candy(.cottonCandy)","KeyboardTheme.neon(.night)","KeyboardTheme.tron(.sark)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also define a custom style variation directly in the theme initializer:"}]},{"type":"codeListing","syntax":"swift","code":["KeyboardTheme.standard(.init(tint: .black))"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Style variations make it easy to play within the overall style of a theme, and only modify what fits the theme."}]},{"anchor":"Custom-themes","level":3,"type":"heading","text":"Custom themes"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can create completely custom themes, like this one that just changes the color of the primary button:"}]},{"type":"codeListing","syntax":"swift","code":["extension KeyboardTheme {","    static var myCustomTheme: KeyboardTheme {","        get throws {","            var theme = try? KeyboardTheme(","                primaryBackgroundColor: .green","            )","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also use another theme as a template and tweak any parts of it:"}]},{"type":"codeListing","syntax":"swift","code":["extension KeyboardTheme {","    static var anotherTheme: KeyboardTheme {","        get throws {","            var theme = try? KeyboardTheme.standard","            theme.buttonStyles[.primary]?.backgroundColor = .green","            return theme","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can then access your themese with "},{"type":"codeVoice","code":"KeyboardTheme.myCustomTheme"},{"type":"text","text":" or just "},{"type":"codeVoice","code":".myCustomTheme"},{"type":"text","text":" when a theme is expected."}]},{"anchor":"Theme-based-appearance","level":3,"type":"heading","text":"Theme-based appearance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once you have a theme that you want to use, you can use a "},{"type":"codeVoice","code":"KeyboardThemeAppearance"},{"type":"text","text":" to apply any theme to KeyboardKit:"}]},{"type":"codeListing","syntax":"swift","code":["override func viewWillSetupKeyboard() {","    super.viewWillSetupKeyboard()","","    \/\/ Setup KeyboardKit Pro with a license","    try? setupPro(withLicenseKey: \"LICENSE_KEY_HERE\") { _ in","        keyboardAppearance = KeyboardThemeAppearance(","            theme: .cottonCandy,","            keyboardContext: keyboardContext)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will make any view that uses the appearance (like the "},{"type":"codeVoice","code":"SystemKeyboard"},{"type":"text","text":") use the theme. You can change the theme at any time."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since this requires KeyboardKit Pro, you must register it "},{"type":"emphasis","inlineContent":[{"type":"text","text":"after"}]},{"type":"text","text":" setting up your license."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can inherit "},{"type":"codeVoice","code":"KeyboardThemeAppearance"},{"type":"text","text":" to customize the appearance even further, which lets you mix the benefits of themes and appearances in any way that fits your needs."}]},{"anchor":"Pre-defined-themes","level":3,"type":"heading","text":"Pre-defined themes"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can access all pre-defined themes with "},{"type":"codeVoice","code":"KeyboardTheme.{ID}"},{"type":"text","text":", for instance "},{"type":"codeVoice","code":"KeyboardKit.standard"},{"type":"text","text":" or "},{"type":"codeVoice","code":"KeyboardKit.minimal(.pink)"},{"type":"text","text":". Here are all pre-defined themes with some style variations:"}]},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Theme"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Preview"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Style variations examples"}]}],[{"type":"paragraph","inlineContent":[]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".standard"}]}],[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"standard.jpg"}]}],[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"standard-blue.jpg"}]}],[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"standard-pink.jpg"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".swifty"}]}],[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"swifty.jpg"}]}],[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"swifty-blue.jpg"}]}],[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"swifty-pink.jpg"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".minimal"}]}],[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"minimal.jpg"}]}],[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"minimal-midnight.jpg"}]}],[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"minimal-sunset.jpg"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".candy"}]}],[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"candy.jpg"}]}],[{"type":"paragraph","inlineContent":[]}],[{"type":"paragraph","inlineContent":[]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".neon"}]}],[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"neon.jpg"}]}],[{"type":"paragraph","inlineContent":[]}],[{"type":"paragraph","inlineContent":[]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".tron"}]}],[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tron.jpg"}]}],[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tron-fcon.jpg"}]}],[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tron-virus.jpg"}]}]]],"header":"row"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can get all pre-defined themes with "},{"type":"codeVoice","code":"KeyboardTheme.allPredefined"},{"type":"text","text":". Theme-specific styles also have an "},{"type":"codeVoice","code":"allPredefined"},{"type":"text","text":" with all style variations for a certain theme, e.g. "},{"type":"codeVoice","code":"KeyboardTheme.SwiftyStyle.allPredefined"},{"type":"text","text":"."}]},{"anchor":"Views","level":3,"type":"heading","text":"Views"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit Pro has a "},{"type":"codeVoice","code":"KeyboardThemePreview"},{"type":"text","text":" view that you can use to preview themes in Xcode or display to the user."}]},{"anchor":"License-Requirements","level":3,"type":"heading","text":"License Requirements"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The KeyboardKit Pro theme engine requires a "},{"type":"codeVoice","code":"Gold"},{"type":"text","text":" license."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/keyboardkit\/appearance"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Appearance","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This article describes the KeyboardKit appearance engine and how to use it."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Appearance","role":"article","modules":[{"name":"KeyboardKit"}]},"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Actions","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Autocomplete","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Callouts","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Dictation","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Emojis","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/External-Keyboards","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Feedback","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Gestures","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Input","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Keyboard","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Layout","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Localization","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Previews","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Proxy-Extensions","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Routing","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/RTL","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Settings"],"generated":true}],"references":{"doc://KeyboardKit/documentation/KeyboardKit/Layout":{"role":"article","title":"Layouts","abstract":[{"type":"text","text":"This article describes the KeyboardKit keyboard layout engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Layout","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/layout"},"doc://KeyboardKit/documentation/KeyboardKit/Autocomplete":{"role":"article","title":"Autocomplete","abstract":[{"type":"text","text":"This article describes the KeyboardKit autocomplete engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Autocomplete","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/autocomplete"},"doc://KeyboardKit/documentation/KeyboardKit":{"role":"collection","title":"KeyboardKit","abstract":[{"type":"text","text":"KeyboardKit helps you build custom keyboards with Swift and SwiftUI."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit"},"doc://KeyboardKit/documentation/KeyboardKit/Actions":{"role":"article","title":"Actions","abstract":[{"type":"text","text":"This article describes the KeyboardKit action engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Actions","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/actions"},"doc://KeyboardKit/documentation/KeyboardKit/Proxy-Extensions":{"role":"article","title":"Proxy Extensions","abstract":[{"type":"text","text":"This article describes how KeyboardKit extends "},{"type":"codeVoice","code":"UITextDocumentProxy"},{"type":"text","text":" with a lot of additional functionality."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Proxy-Extensions","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/proxy-extensions"},"doc://KeyboardKit/documentation/KeyboardKit/Feedback":{"role":"article","title":"Feedback","abstract":[{"type":"text","text":"This article describes the KeyboardKit feedback engine and how to use it to trigger audio and haptic feedback."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Feedback","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/feedback"},"doc://KeyboardKit/documentation/KeyboardKit/Emojis":{"role":"article","title":"Emojis","abstract":[{"type":"text","text":"This article describes the KeyboardKit emoji model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Emojis","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/emojis"},"doc://KeyboardKit/documentation/KeyboardKit/Routing":{"role":"article","title":"Routing","abstract":[{"type":"text","text":"This article describes how KeyboardKit adds ways for you to route text from the main app to other text fields within the keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Routing","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/routing"},"swifty-blue.jpg":{"alt":"Swifty","type":"image","identifier":"swifty-blue.jpg","variants":[{"url":"\/images\/swifty-blue.jpg","traits":["1x","light"]}]},"tron.jpg":{"alt":"Tron","type":"image","identifier":"tron.jpg","variants":[{"url":"\/images\/tron.jpg","traits":["1x","light"]}]},"tron-fcon.jpg":{"alt":"fCon","type":"image","identifier":"tron-fcon.jpg","variants":[{"url":"\/images\/tron-fcon.jpg","traits":["1x","light"]}]},"tron-virus.jpg":{"alt":"virus","type":"image","identifier":"tron-virus.jpg","variants":[{"url":"\/images\/tron-virus.jpg","traits":["1x","light"]}]},"doc://KeyboardKit/documentation/KeyboardKit/EmojiKeyboard":{"role":"symbol","title":"EmojiKeyboard","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmojiKeyboard"}],"abstract":[{"type":"text","text":"This view can be used as an emoji keyboard and will list an"},{"type":"text","text":" "},{"type":"text","text":"emoji collection using the provided configuration."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/EmojiKeyboard","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EmojiKeyboard"}],"url":"\/documentation\/keyboardkit\/emojikeyboard"},"doc://KeyboardKit/documentation/KeyboardKit/External-Keyboards":{"role":"article","title":"External Keyboards","abstract":[{"type":"text","text":"This article describes the KeyboardKit external keyboard engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/External-Keyboards","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/external-keyboards"},"doc://KeyboardKit/documentation/KeyboardKit/StandardKeyboardAppearance":{"role":"symbol","title":"StandardKeyboardAppearance","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardKeyboardAppearance"}],"abstract":[{"type":"text","text":"This standard appearance returns styles that replicates the"},{"type":"text","text":" "},{"type":"text","text":"look of a native system keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardAppearance","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StandardKeyboardAppearance"}],"url":"\/documentation\/keyboardkit\/standardkeyboardappearance"},"doc://KeyboardKit/documentation/KeyboardKit/Callouts":{"role":"article","title":"Callouts","abstract":[{"type":"text","text":"This article describes the KeyboardKit callout engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Callouts","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/callouts"},"standard.jpg":{"alt":"Standard","type":"image","identifier":"standard.jpg","variants":[{"url":"\/images\/standard.jpg","traits":["1x","light"]}]},"standard-blue.jpg":{"alt":"Standard","type":"image","identifier":"standard-blue.jpg","variants":[{"url":"\/images\/standard-blue.jpg","traits":["1x","light"]}]},"minimal-sunset.jpg":{"alt":"Sunset","type":"image","identifier":"minimal-sunset.jpg","variants":[{"url":"\/images\/minimal-sunset.jpg","traits":["1x","light"]}]},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardButtonStyle":{"role":"symbol","title":"KeyboardButtonStyle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardButtonStyle"}],"abstract":[{"type":"text","text":"This style defines the style of a system keyboard button."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardButtonStyle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardButtonStyle"}],"url":"\/documentation\/keyboardkit\/keyboardbuttonstyle"},"doc://KeyboardKit/documentation/KeyboardKit/RTL":{"role":"article","title":"RTL","abstract":[{"type":"text","text":"KeyboardKit supports RTL (right-to-left) locales, which means that it supports locales like "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLocale\/arabic"},{"type":"text","text":",  "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLocale\/persian"},{"type":"text","text":" etc."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/RTL","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/rtl"},"minimal-midnight.jpg":{"alt":"Midnight","type":"image","identifier":"minimal-midnight.jpg","variants":[{"url":"\/images\/minimal-midnight.jpg","traits":["1x","light"]}]},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardAppearance":{"role":"symbol","title":"KeyboardAppearance","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardAppearance"}],"abstract":[{"type":"text","text":"This protocol can be implemented by classes that can define"},{"type":"text","text":" "},{"type":"text","text":"styles and appearances for different parts of a keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAppearance","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardAppearance"}],"url":"\/documentation\/keyboardkit\/keyboardappearance"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardAction":{"role":"symbol","title":"KeyboardAction","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardAction"}],"abstract":[{"type":"text","text":"This enum defines keyboard-specific actions that correspond"},{"type":"text","text":" "},{"type":"text","text":"to actions that can be found on various keyboards."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardAction"}],"url":"\/documentation\/keyboardkit\/keyboardaction"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardLocale/arabic":{"role":"symbol","title":"KeyboardLocale.arabic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"arabic"}],"abstract":[],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLocale\/arabic","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardlocale\/arabic"},"doc://KeyboardKit/documentation/KeyboardKit/Dictation":{"role":"article","title":"Dictation (PREVIEW)","abstract":[{"type":"text","text":"This article describes the KeyboardKit dictation engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Dictation","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/dictation"},"neon.jpg":{"alt":"Neon","type":"image","identifier":"neon.jpg","variants":[{"url":"\/images\/neon.jpg","traits":["1x","light"]}]},"swifty-pink.jpg":{"alt":"Swifty","type":"image","identifier":"swifty-pink.jpg","variants":[{"url":"\/images\/swifty-pink.jpg","traits":["1x","light"]}]},"doc://KeyboardKit/documentation/KeyboardKit/EmojiCategoryKeyboard":{"role":"symbol","title":"EmojiCategoryKeyboard","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmojiCategoryKeyboard"}],"abstract":[{"type":"text","text":"This keyboard lists all emojis from a selected category, as"},{"type":"text","text":" "},{"type":"text","text":"well as a menu that lets the user select a new category and"},{"type":"text","text":" "},{"type":"text","text":"change back to an alphabetic keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/EmojiCategoryKeyboard","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EmojiCategoryKeyboard"}],"url":"\/documentation\/keyboardkit\/emojicategorykeyboard"},"doc://KeyboardKit/documentation/KeyboardKit/Gestures":{"role":"article","title":"Gestures","abstract":[{"type":"text","text":"This article describes the KeyboardKit gesture engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Gestures","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/gestures"},"doc://KeyboardKit/documentation/KeyboardKit/Input":{"role":"article","title":"Input","abstract":[{"type":"text","text":"This article describes the KeyboardKit input set engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Input","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/input"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardContext":{"role":"symbol","title":"KeyboardContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardContext"}],"abstract":[{"type":"text","text":"This class provides keyboard extensions with contextual and"},{"type":"text","text":" "},{"type":"text","text":"observable information about the keyboard extension itself."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardContext"}],"url":"\/documentation\/keyboardkit\/keyboardcontext"},"standard-pink.jpg":{"alt":"Standard","type":"image","identifier":"standard-pink.jpg","variants":[{"url":"\/images\/standard-pink.jpg","traits":["1x","light"]}]},"doc://KeyboardKit/documentation/KeyboardKit/EmojiKeyboardStyle":{"role":"symbol","title":"EmojiKeyboardStyle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmojiKeyboardStyle"}],"abstract":[{"type":"text","text":"This style can be applied to emoji keyboard views, like the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/EmojiKeyboard"},{"type":"text","text":" or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/EmojiCategoryKeyboard"},{"type":"text","text":" to customize"},{"type":"text","text":" "},{"type":"text","text":"things like the font, number of rows, item spacing etc."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/EmojiKeyboardStyle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EmojiKeyboardStyle"}],"url":"\/documentation\/keyboardkit\/emojikeyboardstyle"},"doc://KeyboardKit/documentation/KeyboardKit/Keyboard":{"role":"article","title":"Keyboard","abstract":[{"type":"text","text":"This article describes the KeyboardKit keyboard types and how to use them."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Keyboard","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/keyboard"},"doc://KeyboardKit/documentation/KeyboardKit/CalloutStyle":{"deprecated":true,"role":"symbol","title":"CalloutStyle","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"CalloutStyle"}],"abstract":[],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/CalloutStyle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CalloutStyle"}],"url":"\/documentation\/keyboardkit\/calloutstyle"},"doc://KeyboardKit/documentation/KeyboardKit/Localization":{"role":"article","title":"Localization","abstract":[{"type":"text","text":"This article describes the KeyboardKit localization model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Localization","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/localization"},"candy.jpg":{"alt":"Candy","type":"image","identifier":"candy.jpg","variants":[{"url":"\/images\/candy.jpg","traits":["1x","light"]}]},"https://github.com/KeyboardKit/KeyboardKitPro":{"title":"KeyboardKit Pro","titleInlineContent":[{"type":"text","text":"KeyboardKit Pro"}],"type":"link","identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro","url":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro"},"doc://KeyboardKit/documentation/KeyboardKit/Settings":{"role":"article","title":"Settings","abstract":[{"type":"text","text":"This article describes the KeyboardKit settings utilities and how to use them."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Settings","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/settings"},"doc://KeyboardKit/documentation/KeyboardKit/Previews":{"role":"article","title":"Previews","abstract":[{"type":"text","text":"This article describes how KeyboardKit makes it easy to preview keyboard-specific views."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Previews","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/previews"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardLocale/persian":{"role":"symbol","title":"KeyboardLocale.persian","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"persian"}],"abstract":[],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLocale\/persian","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardlocale\/persian"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/keyboardAppearance":{"role":"symbol","title":"keyboardAppearance","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardAppearance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyboardAppearance","preciseIdentifier":"s:11KeyboardKit0A10AppearanceP"}],"abstract":[{"type":"text","text":"The appearance that is used to customize the keyboardâ€™s"},{"type":"text","text":" "},{"type":"text","text":"design, such as its colors, fonts etc."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardAppearance","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/keyboardappearance"},"swifty.jpg":{"alt":"Swifty","type":"image","identifier":"swifty.jpg","variants":[{"url":"\/images\/swifty.jpg","traits":["1x","light"]}]},"minimal.jpg":{"alt":"Minimal","type":"image","identifier":"minimal.jpg","variants":[{"url":"\/images\/minimal.jpg","traits":["1x","light"]}]}}}