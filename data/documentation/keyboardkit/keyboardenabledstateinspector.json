{"seeAlsoSections":[{"title":"Keyboard","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAutocapitalizationType","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardBehavior","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardController","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardType","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledLabel","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledState","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardHostingController","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardTextContext","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/NextKeyboardButton","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/NextKeyboardController","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardBehavior","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StaticKeyboardBehavior"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardEnabledStateInspector"}],"title":"KeyboardEnabledStateInspector","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:11KeyboardKit0A21EnabledStateInspectorP","modules":[{"name":"KeyboardKit"}],"navigatorTitle":[{"kind":"identifier","text":"KeyboardEnabledStateInspector"}]},"abstract":[{"type":"text","text":"This protocol can be implemented by any type that can check"},{"type":"text","text":" "},{"type":"text","text":"state state of keyboard extensions."}],"sections":[],"identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledState"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/activeKeyboardBundleIds","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/isFullAccessEnabled"]},{"title":"Instance Methods","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/enabledKeyboardBundleIds(defaults:)","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/isKeyboardActive(withBundleId:)","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/isKeyboardEnabled(withBundleId:defaults:)"]}],"variants":[{"paths":["\/documentation\/keyboardkit\/keyboardenabledstateinspector"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardEnabledStateInspector"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This type lets you check if a keyboard extension is enabled"},{"type":"text","text":" "},{"type":"text","text":"(in System Settings), if it is active (currently being used"},{"type":"text","text":" "},{"type":"text","text":"to type) and if it has been given full access."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that you can use bundle id wildcards, which means that"},{"type":"text","text":" "},{"type":"text","text":"you can inspect multiple keyboards with a single id."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The easiest way to observe a keyboard extension state is to"},{"type":"text","text":" "},{"type":"text","text":"use a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledState"},{"type":"text","text":" which is an observable class"},{"type":"text","text":" "},{"type":"text","text":"that implements the protocol with published properties that"},{"type":"text","text":" "},{"type":"text","text":"let you easily observe any state changes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This protocol is implemented by the "},{"type":"codeVoice","code":"UIInputViewController"},{"type":"text","text":" "},{"type":"text","text":"base class in "},{"type":"codeVoice","code":"UIKit"},{"type":"text","text":"."}]}]}],"references":{"doc://KeyboardKit/documentation/KeyboardKit":{"role":"collection","title":"KeyboardKit","abstract":[{"type":"text","text":"KeyboardKit helps you build custom keyboards with Swift and SwiftUI."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardEnabledStateInspector/isKeyboardEnabled(withBundleId:defaults:)":{"role":"symbol","title":"isKeyboardEnabled(withBundleId:defaults:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isKeyboardEnabled"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withBundleId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"defaults"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UserDefaults","preciseIdentifier":"c:objc(cs)NSUserDefaults"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether or not a certain keyboard extension is enabled."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/isKeyboardEnabled(withBundleId:defaults:)","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardenabledstateinspector\/iskeyboardenabled(withbundleid:defaults:)"},"doc://KeyboardKit/documentation/KeyboardKit/StandardKeyboardBehavior":{"role":"symbol","title":"StandardKeyboardBehavior","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardKeyboardBehavior"}],"abstract":[{"type":"text","text":"This class defines how a standard, Western keyboard behaves."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardBehavior","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StandardKeyboardBehavior"}],"url":"\/documentation\/keyboardkit\/standardkeyboardbehavior"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardTextContext":{"role":"symbol","title":"KeyboardTextContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardTextContext"}],"abstract":[{"type":"text","text":"This class provides keyboard extensions with contextual and"},{"type":"text","text":" "},{"type":"text","text":"observable information about the text in the document proxy."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardTextContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardTextContext"}],"url":"\/documentation\/keyboardkit\/keyboardtextcontext"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardEnabledStateInspector/activeKeyboardBundleIds":{"role":"symbol","title":"activeKeyboardBundleIds","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"activeKeyboardBundleIds"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Get a list of all active keyboard bundle identifiers."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/activeKeyboardBundleIds","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardenabledstateinspector\/activekeyboardbundleids"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardEnabledStateInspector/isKeyboardActive(withBundleId:)":{"role":"symbol","title":"isKeyboardActive(withBundleId:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isKeyboardActive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withBundleId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether or not a certain keyboard extension is active."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/isKeyboardActive(withBundleId:)","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardenabledstateinspector\/iskeyboardactive(withbundleid:)"},"doc://KeyboardKit/documentation/KeyboardKit/StaticKeyboardBehavior":{"role":"symbol","title":"StaticKeyboardBehavior","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StaticKeyboardBehavior"}],"abstract":[{"type":"text","text":"This behavior can be used to define a behavior that doesnâ€™t"},{"type":"text","text":" "},{"type":"text","text":"cause any changes to the keyboard when typing."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StaticKeyboardBehavior","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StaticKeyboardBehavior"}],"url":"\/documentation\/keyboardkit\/statickeyboardbehavior"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardEnabledStateInspector/enabledKeyboardBundleIds(defaults:)":{"role":"symbol","title":"enabledKeyboardBundleIds(defaults:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"enabledKeyboardBundleIds"},{"kind":"text","text":"("},{"kind":"externalParam","text":"defaults"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UserDefaults","preciseIdentifier":"c:objc(cs)NSUserDefaults"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Get a list of all enabled keyboard bundle identifiers."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/enabledKeyboardBundleIds(defaults:)","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardenabledstateinspector\/enabledkeyboardbundleids(defaults:)"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardEnabledState":{"role":"symbol","title":"KeyboardEnabledState","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardEnabledState"}],"abstract":[{"type":"text","text":"This observable class can be used to observe the state of a"},{"type":"text","text":" "},{"type":"text","text":"keyboard extension."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardEnabledState"}],"url":"\/documentation\/keyboardkit\/keyboardenabledstate"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardAutocapitalizationType":{"role":"symbol","title":"KeyboardAutocapitalizationType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardAutocapitalizationType"}],"abstract":[{"type":"text","text":"This enum defines all supported auto-capitalization types."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAutocapitalizationType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardAutocapitalizationType"}],"url":"\/documentation\/keyboardkit\/keyboardautocapitalizationtype"},"doc://KeyboardKit/documentation/KeyboardKit/NextKeyboardButton":{"role":"symbol","title":"NextKeyboardButton","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NextKeyboardButton"}],"abstract":[{"type":"text","text":"This button makes any view behave as a next keyboard button,"},{"type":"text","text":" "},{"type":"text","text":"which switches to the next keyboard when tapped and opens a"},{"type":"text","text":" "},{"type":"text","text":"keyboard switcher menu when pressed."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/NextKeyboardButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NextKeyboardButton"}],"url":"\/documentation\/keyboardkit\/nextkeyboardbutton"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardController":{"role":"symbol","title":"KeyboardController","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardController"}],"abstract":[{"type":"text","text":"This protocol is used to make using the keyboard input view"},{"type":"text","text":" "},{"type":"text","text":"controller more abstract and available to more platforms."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardController"}],"url":"\/documentation\/keyboardkit\/keyboardcontroller"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardEnabledStateInspector/isFullAccessEnabled":{"role":"symbol","title":"isFullAccessEnabled","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isFullAccessEnabled"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether or not the app has been given full access"},{"type":"text","text":" "},{"type":"text","text":"in System Settings."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/isFullAccessEnabled","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardenabledstateinspector\/isfullaccessenabled"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardContext":{"role":"symbol","title":"KeyboardContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardContext"}],"abstract":[{"type":"text","text":"This class provides keyboard extensions with contextual and"},{"type":"text","text":" "},{"type":"text","text":"observable information about the keyboard extension itself."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardContext"}],"url":"\/documentation\/keyboardkit\/keyboardcontext"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardEnabledLabel":{"role":"symbol","title":"KeyboardEnabledLabel","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardEnabledLabel"}],"abstract":[{"type":"text","text":"This label can be used to show different views depending on"},{"type":"text","text":" "},{"type":"text","text":"a provided enabled state."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledLabel","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardEnabledLabel"}],"url":"\/documentation\/keyboardkit\/keyboardenabledlabel"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardHostingController":{"role":"symbol","title":"KeyboardHostingController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardHostingController"}],"abstract":[{"type":"text","text":"This controller can be used to add any "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":"-based view"},{"type":"text","text":" "},{"type":"text","text":"to a "},{"type":"codeVoice","code":"KeyboardInputViewController"},{"type":"text","text":"."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardHostingController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardHostingController"}],"url":"\/documentation\/keyboardkit\/keyboardhostingcontroller"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardType":{"role":"symbol","title":"KeyboardType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardType"}],"abstract":[{"type":"text","text":"This enum contains all keyboard types that can currently be"},{"type":"text","text":" "},{"type":"text","text":"bound to the "},{"type":"codeVoice","code":"KeyboardAction"},{"type":"text","text":" switch keyboard action."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardType"}],"url":"\/documentation\/keyboardkit\/keyboardtype"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController":{"role":"symbol","title":"KeyboardInputViewController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardInputViewController"}],"abstract":[{"type":"text","text":"This class extends "},{"type":"codeVoice","code":"UIInputViewController"},{"type":"text","text":" with KeyboardKit"},{"type":"text","text":" "},{"type":"text","text":"specific functionality."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardInputViewController"}],"url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardBehavior":{"role":"symbol","title":"KeyboardBehavior","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardBehavior"}],"abstract":[{"type":"text","text":"This protocol can be used to specify behavior rules for the"},{"type":"text","text":" "},{"type":"text","text":"keyboard. It aims to separate behavior from action handling"},{"type":"text","text":" "},{"type":"text","text":"to make the code cleaner and more understandable."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardBehavior","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardBehavior"}],"url":"\/documentation\/keyboardkit\/keyboardbehavior"},"doc://KeyboardKit/documentation/KeyboardKit/NextKeyboardController":{"role":"symbol","title":"NextKeyboardController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NextKeyboardController"}],"abstract":[{"type":"text","text":"This class is used as global state for next keyboard button"},{"type":"text","text":" "},{"type":"text","text":"views, since they need an input view controller to function."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/NextKeyboardController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NextKeyboardController"}],"url":"\/documentation\/keyboardkit\/nextkeyboardcontroller"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardEnabledStateInspector":{"role":"symbol","title":"KeyboardEnabledStateInspector","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardEnabledStateInspector"}],"abstract":[{"type":"text","text":"This protocol can be implemented by any type that can check"},{"type":"text","text":" "},{"type":"text","text":"state state of keyboard extensions."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardEnabledStateInspector"}],"url":"\/documentation\/keyboardkit\/keyboardenabledstateinspector"}}}